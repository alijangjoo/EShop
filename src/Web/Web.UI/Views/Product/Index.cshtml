@using Web.UI.Models
@model ProductListViewModel
@{
    ViewData["Title"] = "محصولات / Products";
}

<div class="container-fluid px-4">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h1 class="h3 mb-0">@ViewData["Title"]</h1>
                <div class="d-flex align-items-center">
                    <span class="text-muted me-3">@Model.TotalProducts محصول موجود</span>
                    <select id="sortBy" class="form-select form-select-sm" style="width: auto;">
                        <option value="">مرتب‌سازی</option>
                        <option value="name">نام</option>
                        <option value="price">قیمت</option>
                        <option value="date">تاریخ</option>
                    </select>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Filters Sidebar -->
        <div class="col-lg-3 col-md-4 mb-4">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">فیلترها / Filters</h5>
                </div>
                <div class="card-body">
                    <form id="filterForm" method="get">
                        <!-- Search -->
                        <div class="mb-3">
                            <label class="form-label">جستجو / Search</label>
                            <input type="text" class="form-control" name="search" value="@Model.SearchTerm" placeholder="نام محصول...">
                        </div>

                        <!-- Categories -->
                        <div class="mb-3">
                            <label class="form-label">دسته‌بندی / Categories</label>
                            <select class="form-select" name="categoryId">
                                <option value="">همه دسته‌ها</option>
                                @foreach (var category in Model.Categories)
                                {
                                    <option value="@category.Id" selected="@(Model.CategoryId == category.Id)">
                                        @category.NamePersian (@category.ProductCount)
                                    </option>
                                }
                            </select>
                        </div>

                        <!-- Price Range -->
                        <div class="mb-3">
                            <label class="form-label">محدوده قیمت / Price Range</label>
                            <div class="row g-2">
                                <div class="col-6">
                                    <input type="number" class="form-control" name="minPrice" value="@Model.MinPrice" placeholder="از">
                                </div>
                                <div class="col-6">
                                    <input type="number" class="form-control" name="maxPrice" value="@Model.MaxPrice" placeholder="تا">
                                </div>
                            </div>
                        </div>

                        <!-- Submit Buttons -->
                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary">اعمال فیلتر</button>
                            <a href="@Url.Action("Index")" class="btn btn-outline-secondary">پاک کردن</a>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <!-- Products Grid -->
        <div class="col-lg-9 col-md-8">
            @if (Model.Products.Any())
            {
                <div class="row">
                    @foreach (var product in Model.Products)
                    {
                        <div class="col-xl-4 col-lg-6 col-md-6 col-sm-6 mb-4">
                            <div class="card h-100 product-card">
                                <div class="position-relative">
                                    @if (product.Images.Any())
                                    {
                                        <img src="@product.Images.First()" class="card-img-top" alt="@product.NamePersian" style="height: 200px; object-fit: cover;">
                                    }
                                    else
                                    {
                                        <div class="card-img-top bg-light d-flex align-items-center justify-content-center" style="height: 200px;">
                                            <i class="fas fa-image fa-3x text-muted"></i>
                                        </div>
                                    }
                                    
                                    @if (product.IsOnSale)
                                    {
                                        <span class="badge bg-danger position-absolute top-0 start-0 m-2">تخفیف</span>
                                    }
                                    
                                    @if (product.IsFeatured)
                                    {
                                        <span class="badge bg-warning position-absolute top-0 end-0 m-2">ویژه</span>
                                    }
                                </div>
                                
                                <div class="card-body d-flex flex-column">
                                    <h5 class="card-title text-truncate">@product.NamePersian</h5>
                                    <p class="card-text text-muted small mb-2">@product.NameEnglish</p>
                                    <p class="card-text text-muted small flex-grow-1">@product.DescriptionPersian</p>
                                    
                                    <div class="mt-auto">
                                        <div class="d-flex justify-content-between align-items-center mb-2">
                                            <div>
                                                @if (product.IsOnSale && product.OriginalPrice.HasValue)
                                                {
                                                    <span class="text-muted text-decoration-line-through small">@product.OriginalPrice.Value.ToString("N0") تومان</span>
                                                    <br>
                                                    <strong class="text-danger">@product.Price.ToString("N0") تومان</strong>
                                                }
                                                else
                                                {
                                                    <strong>@product.Price.ToString("N0") تومان</strong>
                                                }
                                            </div>
                                            <span class="badge bg-secondary">@product.CategoryName</span>
                                        </div>
                                        
                                        <div class="d-flex gap-2">
                                            <a href="@Url.Action("Details", new { id = product.Id })" class="btn btn-primary btn-sm flex-grow-1">
                                                مشاهده
                                            </a>
                                            @if (product.IsAvailable && product.Stock > 0)
                                            {
                                                <button type="button" class="btn btn-outline-primary btn-sm" onclick="addToCart(@product.Id)">
                                                    <i class="fas fa-shopping-cart"></i>
                                                </button>
                                            }
                                            else
                                            {
                                                <button type="button" class="btn btn-outline-secondary btn-sm" disabled>
                                                    ناموجود
                                                </button>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                <!-- Pagination -->
                @if (Model.TotalPages > 1)
                {
                    <nav aria-label="صفحه‌بندی محصولات">
                        <ul class="pagination justify-content-center">
                            @for (int i = 1; i <= Model.TotalPages; i++)
                            {
                                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                    <a class="page-link" href="@Url.Action("Index", new { 
                                        page = i, 
                                        pageSize = Model.PageSize,
                                        search = Model.SearchTerm,
                                        categoryId = Model.CategoryId,
                                        minPrice = Model.MinPrice,
                                        maxPrice = Model.MaxPrice,
                                        sortBy = Model.SortBy
                                    })">@i</a>
                                </li>
                            }
                        </ul>
                    </nav>
                }
            }
            else
            {
                <div class="text-center py-5">
                    <i class="fas fa-search fa-3x text-muted mb-3"></i>
                    <h4>محصولی یافت نشد</h4>
                    <p class="text-muted">با فیلترهای مختلف جستجو کنید</p>
                    <a href="@Url.Action("Index")" class="btn btn-primary">مشاهده همه محصولات</a>
                </div>
            }
        </div>
    </div>
</div>

<script>
    function addToCart(productId) {
        fetch('@Url.Action("AddToCart", "Cart")', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
            },
            body: `productId=${productId}&quantity=1`
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // Update cart count in header
                updateCartCount();
                // Show success message
                showToast('محصول به سبد خرید اضافه شد', 'success');
            } else {
                showToast('خطا در افزودن محصول', 'error');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            showToast('خطا در افزودن محصول', 'error');
        });
    }

    // Sort functionality
    document.getElementById('sortBy').addEventListener('change', function() {
        const sortBy = this.value;
        const currentUrl = new URL(window.location.href);
        if (sortBy) {
            currentUrl.searchParams.set('sortBy', sortBy);
        } else {
            currentUrl.searchParams.delete('sortBy');
        }
        window.location.href = currentUrl.toString();
    });

    // Set current sort value
    const currentSort = '@Model.SortBy';
    if (currentSort) {
        document.getElementById('sortBy').value = currentSort;
    }
</script>