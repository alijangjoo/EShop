@model Admin.UI.Models.DashboardViewModel
@{
    ViewData["Title"] = "داشبورد";
}

<!-- Dashboard Stats Cards -->
<div class="row mb-4">
    <div class="col-lg-3 col-md-6 mb-3">
        <div class="stat-card">
            <div class="stat-icon" style="background-color: #007bff;">
                <i class="fas fa-box"></i>
            </div>
            <div class="stat-number currency">@Model.Stats.TotalProducts</div>
            <div class="stat-label">کل محصولات</div>
        </div>
    </div>
    <div class="col-lg-3 col-md-6 mb-3">
        <div class="stat-card">
            <div class="stat-icon" style="background-color: #28a745;">
                <i class="fas fa-shopping-cart"></i>
            </div>
            <div class="stat-number currency">@Model.Stats.TotalOrders</div>
            <div class="stat-label">کل سفارشات</div>
        </div>
    </div>
    <div class="col-lg-3 col-md-6 mb-3">
        <div class="stat-card">
            <div class="stat-icon" style="background-color: #ffc107;">
                <i class="fas fa-users"></i>
            </div>
            <div class="stat-number currency">@Model.Stats.TotalCustomers</div>
            <div class="stat-label">کل مشتریان</div>
        </div>
    </div>
    <div class="col-lg-3 col-md-6 mb-3">
        <div class="stat-card">
            <div class="stat-icon" style="background-color: #dc3545;">
                <i class="fas fa-chart-line"></i>
            </div>
            <div class="stat-number currency">@Model.Stats.TotalRevenue</div>
            <div class="stat-label">کل درآمد (تومان)</div>
        </div>
    </div>
</div>

<!-- Secondary Stats -->
<div class="row mb-4">
    <div class="col-lg-3 col-md-6 mb-3">
        <div class="stat-card">
            <div class="stat-icon" style="background-color: #17a2b8;">
                <i class="fas fa-clock"></i>
            </div>
            <div class="stat-number currency">@Model.Stats.PendingOrders</div>
            <div class="stat-label">سفارشات در انتظار</div>
        </div>
    </div>
    <div class="col-lg-3 col-md-6 mb-3">
        <div class="stat-card">
            <div class="stat-icon" style="background-color: #fd7e14;">
                <i class="fas fa-exclamation-triangle"></i>
            </div>
            <div class="stat-number currency">@Model.Stats.LowStockProducts</div>
            <div class="stat-label">محصولات کم موجود</div>
        </div>
    </div>
    <div class="col-lg-3 col-md-6 mb-3">
        <div class="stat-card">
            <div class="stat-icon" style="background-color: #6f42c1;">
                <i class="fas fa-calendar-day"></i>
            </div>
            <div class="stat-number currency">@Model.Stats.TodayRevenue</div>
            <div class="stat-label">درآمد امروز (تومان)</div>
        </div>
    </div>
    <div class="col-lg-3 col-md-6 mb-3">
        <div class="stat-card">
            <div class="stat-icon" style="background-color: #20c997;">
                <i class="fas fa-calendar-alt"></i>
            </div>
            <div class="stat-number currency">@Model.Stats.MonthlyRevenue</div>
            <div class="stat-label">درآمد ماهانه (تومان)</div>
        </div>
    </div>
</div>

<!-- Charts and Tables Row -->
<div class="row">
    <!-- Sales Chart -->
    <div class="col-lg-8 mb-4">
        <div class="card">
            <div class="card-header">
                <h5 class="mb-0">
                    <i class="fas fa-chart-area me-2"></i>
                    نمودار فروش هفتگی
                </h5>
            </div>
            <div class="card-body">
                <canvas id="salesChart" height="300"></canvas>
            </div>
        </div>
    </div>
    
    <!-- Top Products -->
    <div class="col-lg-4 mb-4">
        <div class="card">
            <div class="card-header">
                <h5 class="mb-0">
                    <i class="fas fa-star me-2"></i>
                    پرفروش‌ترین محصولات
                </h5>
            </div>
            <div class="card-body">
                @if (Model.TopProducts.Any())
                {
                    @foreach (var product in Model.TopProducts)
                    {
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <div>
                                <div class="fw-bold">@product.NamePersian</div>
                                <small class="text-muted">فروخته شده: <span class="persian-number">@product.SoldQuantity</span></small>
                            </div>
                            <div class="text-success fw-bold currency">@product.Revenue</div>
                        </div>
                    }
                }
                else
                {
                    <p class="text-muted text-center">هیچ داده‌ای یافت نشد</p>
                }
            </div>
        </div>
    </div>
</div>

<!-- Recent Orders -->
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5 class="mb-0">
                    <i class="fas fa-shopping-cart me-2"></i>
                    آخرین سفارشات
                </h5>
                <a href="@Url.Action("Orders", "Dashboard")" class="btn btn-outline-primary btn-sm">
                    مشاهده همه
                    <i class="fas fa-arrow-left ms-1"></i>
                </a>
            </div>
            <div class="card-body p-0">
                @if (Model.RecentOrders.Any())
                {
                    <div class="table-responsive">
                        <table class="table table-hover mb-0">
                            <thead>
                                <tr>
                                    <th>شماره سفارش</th>
                                    <th>مشتری</th>
                                    <th>مبلغ</th>
                                    <th>وضعیت</th>
                                    <th>تاریخ</th>
                                    <th>عملیات</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var order in Model.RecentOrders)
                                {
                                    <tr>
                                        <td>
                                            <strong>@order.OrderNumber</strong>
                                        </td>
                                        <td>@order.CustomerName</td>
                                        <td>
                                            <span class="currency">@order.TotalAmount</span>
                                            <small class="text-muted">تومان</small>
                                        </td>
                                        <td>
                                            @{
                                                var badgeClass = order.Status switch
                                                {
                                                    "در انتظار" => "bg-warning",
                                                    "تأیید شده" => "bg-info",
                                                    "ارسال شده" => "bg-primary",
                                                    "تحویل داده شده" => "bg-success",
                                                    "لغو شده" => "bg-danger",
                                                    _ => "bg-secondary"
                                                };
                                            }
                                            <span class="badge @badgeClass">@order.Status</span>
                                        </td>
                                        <td>
                                            <span class="persian-date" data-date="@order.OrderDate.ToString("yyyy-MM-dd")">
                                                @order.OrderDate.ToString("yyyy/MM/dd")
                                            </span>
                                        </td>
                                        <td>
                                            <a href="@Url.Action("OrderDetails", "Dashboard", new { id = order.Id })" 
                                               class="btn btn-sm btn-outline-primary">
                                                <i class="fas fa-eye"></i>
                                                نمایش
                                            </a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <div class="text-center py-4">
                        <i class="fas fa-shopping-cart fa-3x text-muted mb-3"></i>
                        <p class="text-muted">هیچ سفارش جدیدی یافت نشد</p>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- Quick Actions -->
<div class="row mt-4">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h5 class="mb-0">
                    <i class="fas fa-bolt me-2"></i>
                    دسترسی سریع
                </h5>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-lg-3 col-md-6 mb-3">
                        <a href="@Url.Action("CreateProduct", "Dashboard")" class="btn btn-outline-primary w-100 py-3">
                            <i class="fas fa-plus fa-2x mb-2"></i>
                            <br>
                            افزودن محصول جدید
                        </a>
                    </div>
                    <div class="col-lg-3 col-md-6 mb-3">
                        <a href="@Url.Action("Orders", "Dashboard")" class="btn btn-outline-success w-100 py-3">
                            <i class="fas fa-list fa-2x mb-2"></i>
                            <br>
                            مدیریت سفارشات
                        </a>
                    </div>
                    <div class="col-lg-3 col-md-6 mb-3">
                        <a href="@Url.Action("Customers", "Dashboard")" class="btn btn-outline-info w-100 py-3">
                            <i class="fas fa-users fa-2x mb-2"></i>
                            <br>
                            مدیریت مشتریان
                        </a>
                    </div>
                    <div class="col-lg-3 col-md-6 mb-3">
                        <a href="@Url.Action("Reports", "Dashboard")" class="btn btn-outline-warning w-100 py-3">
                            <i class="fas fa-chart-bar fa-2x mb-2"></i>
                            <br>
                            مشاهده گزارشات
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Sales Chart
            const ctx = document.getElementById('salesChart').getContext('2d');
            const salesData = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.SalesChart));
            
            new Chart(ctx, {
                type: 'line',
                data: {
                    labels: salesData.map(item => item.label),
                    datasets: [{
                        label: 'فروش (تومان)',
                        data: salesData.map(item => item.value),
                        borderColor: '#667eea',
                        backgroundColor: 'rgba(102, 126, 234, 0.1)',
                        borderWidth: 3,
                        fill: true,
                        tension: 0.4,
                        pointBackgroundColor: '#667eea',
                        pointBorderColor: '#fff',
                        pointBorderWidth: 2,
                        pointRadius: 6
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: true,
                            position: 'top',
                            labels: {
                                font: {
                                    family: 'Vazir'
                                }
                            }
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                font: {
                                    family: 'Vazir'
                                },
                                callback: function(value) {
                                    return new Intl.NumberFormat('fa-IR').format(value) + ' تومان';
                                }
                            }
                        },
                        x: {
                            ticks: {
                                font: {
                                    family: 'Vazir'
                                }
                            }
                        }
                    },
                    elements: {
                        point: {
                            hoverRadius: 8
                        }
                    }
                }
            });
            
            // Format numbers and prices
            const formatCurrency = (amount) => {
                return new Intl.NumberFormat('fa-IR').format(amount);
            };
            
            const formatPersianNumber = (number) => {
                const persianDigits = '۰۱۲۳۴۵۶۷۸۹';
                return number.toString().replace(/\d/g, function(digit) {
                    return persianDigits[parseInt(digit)];
                });
            };
            
            // Format currency values
            document.querySelectorAll('.currency').forEach(element => {
                const value = element.textContent.replace(/[^\d]/g, '');
                if (value) {
                    element.textContent = formatCurrency(parseInt(value));
                }
            });
            
            // Format Persian numbers
            document.querySelectorAll('.persian-number').forEach(element => {
                const value = element.textContent.replace(/[^\d]/g, '');
                if (value) {
                    element.textContent = formatPersianNumber(value);
                }
            });
            
            // Format Persian dates
            document.querySelectorAll('.persian-date').forEach(element => {
                const dateValue = element.dataset.date;
                if (dateValue) {
                    try {
                        const date = new Date(dateValue);
                        const formattedDate = new Intl.DateTimeFormat('fa-IR', {
                            year: 'numeric',
                            month: 'long',
                            day: 'numeric'
                        }).format(date);
                        element.textContent = formattedDate;
                    } catch (e) {
                        console.warn('Invalid date format:', dateValue);
                    }
                }
            });
            
            // Auto-refresh dashboard every 5 minutes
            setInterval(function() {
                fetch('@Url.Action("GetDashboardStats", "Dashboard")')
                    .then(response => response.json())
                    .then(data => {
                        if (!data.error) {
                            // Update stats without full page reload
                            console.log('Dashboard stats updated');
                        }
                    })
                    .catch(error => console.error('Error updating dashboard:', error));
            }, 300000); // 5 minutes
        });
    </script>
}